set-window-option -g mode-keys vi

bind s split-window
bind v split-window -h
bind + resize-pane -R 4
bind - resize-pane -L 4
bind j choose-session

bind r source-file ~/.tmux.conf \; display "Reloaded!"
#bind k send-keys -R \; clear-history
bind k send-keys C-l \; clear-history

set -g default-terminal "screen-256color"

unbind C-b
set -g prefix C-s

set -g status-position top
set -g status-left '[#S] '
set -g status-left-length 24
set -g status-right "#{s|$HOME|~|:pane_current_path}  #[fg=yellow,bold]#h  #[fg=cyan,none]%b %d %I:%M  #[fg=white]#(bat) "
set -g status-right-length 200

set -g status-style fg=colour7
set -g window-status-current-style fg=colour10
set -g message-style fg=colour11,bg=colour8
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour8

set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g display-panes-time 150

set -g mouse on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
